{"version":3,"sources":["../../../../hackit/challenge5/challenge5/client/src/reducers/searchReducer.tsx","../../../../hackit/challenge5/challenge5/client/src/reducers/mainReducer.tsx","../../../../hackit/challenge5/challenge5/client/src/reducers/loginReducer.tsx","../../../../hackit/challenge5/challenge5/client/src/store/store.tsx","../../../../hackit/challenge5/challenge5/client/src/actions/searchAction.tsx","../../../../hackit/challenge5/challenge5/client/src/components/header/header.tsx","../../../../hackit/challenge5/challenge5/client/src/components/home/home.tsx","../../../../hackit/challenge5/challenge5/client/src/components/search/search.tsx","../../../../hackit/challenge5/challenge5/client/src/components/movieDetails/movie.tsx","../../../../hackit/challenge5/challenge5/client/src/App.tsx","../../../../hackit/challenge5/challenge5/client/src/actions/login_action.tsx","../../../../hackit/challenge5/challenge5/client/src/index.tsx"],"names":["initialState","mainReducer","combineReducers","login","state","action","type","console","log","payload","search","store","createStore","search_by_id","Header","history","useHistory","dispatch","useDispatch","className","onSubmit","e","preventDefault","target","tag","value","data","id","keyword","axios","post","then","response","status","movieList","push","handleForm","placeholder","style","width","ml","mb","mr","Home","useState","movies","setMovies","page","setPage","useEffect","fetchMovies","map","movie","index","m","maxW","borderWidth","borderRadius","overflow","onClick","showMovieDetails","imdbID","src","Poster","alt","p","d","alignItems","px","colorScheme","color","fontWeight","letterSpacing","fontSize","textTransform","Runtime","Year","mt","as","lineHeight","isTruncated","Title","BoxOffice","isDisabled","Search","useSelector","size","length","Movie","App","withCredentials","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8358d40f.chunk.js","sourcesContent":["const initialState: any = [];\r\n\r\nexport default function search (state = initialState, action:any) {\r\n    switch(action.type) {\r\n        case 'SEARCH_BY_ID':\r\n            console.log('search id', action.payload)\r\n            state = action.payload;\r\n            return state;\r\n\r\n        case 'SEARCH_BY_KEYWORD':\r\n            // console.log('search keyword', ...action.payload)\r\n            state = action.payload;\r\n            return state;\r\n        \r\n        default: return state\r\n    };\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport login from './loginReducer';\r\nimport search from './searchReducer';\r\n\r\nexport const mainReducer = combineReducers({\r\n    login,\r\n    search\r\n})\r\n\r\nexport default mainReducer;","const initialState = false;\r\n\r\nexport default function(state = initialState, action:any) {\r\n    switch(action.type) {\r\n        case 'LOGIN':\r\n            console.log('logging in', action.payload)\r\n            state = action.payload;\r\n            return state;\r\n\r\n        case 'LOGOUT':\r\n            console.log('logging out', action.payload)\r\n            state = action.payload;\r\n            return state;\r\n        \r\n        default: return state\r\n    };\r\n}","import { createStore } from 'redux';\r\nimport mainReducer from '../reducers/mainReducer';\r\n\r\nconst store = createStore(mainReducer);\r\n\r\nexport default store;","export const search_by_key = (payload:any) => {\r\n    return {type: 'SEARCH_BY_KEYWORD', payload}\r\n}\r\n\r\nexport const search_by_id = (payload:any) => {\r\n    return {type: 'SEARCH_BY_ID', payload}\r\n}","import './header.css';\r\n\r\nimport { Avatar, Input, Button, Select, InputLeftElement, InputGroup } from '@chakra-ui/react'\r\n\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport { fetchUserData } from './services';\r\nimport { search_by_id, search_by_key } from '../../actions/searchAction';\r\n\r\nexport default function Header() {\r\n\r\n    // const [showProfile, setShowProfile] = useState(false);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const handleForm = (e: any) => {\r\n        e.preventDefault();\r\n        console.log(e.target.tag.value);\r\n        if (e.target.tag.value == \"id\") {\r\n            const data = {\r\n                id: e.target.keyword.value\r\n            }\r\n            axios.post('/c5/getMovies', data)\r\n                .then((response: any) => {\r\n                    if (response.status === 200) {\r\n                        console.log('result by id', response.data.movieList);\r\n                        console.log('response', response.data.movieList);\r\n                        dispatch(search_by_id([response.data.movieList]));\r\n                        history.push('/movies/' + data.id);\r\n                    }\r\n                })\r\n\r\n        }\r\n        else {\r\n            const data = {\r\n                keyword: e.target.keyword.value\r\n            }\r\n            axios.post('/c5/getMovies', data)\r\n                .then((response: any) => {\r\n                    if (response.status === 200) {\r\n                        console.log('result by name', response.data.movieList);\r\n                        dispatch(search_by_key(response.data.movieList));\r\n                        history.push('/search/?q=' + data.keyword);\r\n                    }\r\n                })\r\n            history.push('/search');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-header-div\">\r\n            <h1>IMDB Crawler</h1>\r\n            <form className=\"header-search-form\" onSubmit={(e) => handleForm(e)}>\r\n                <Select id=\"tag\" placeholder=\"Select Tag\">\r\n                    <option value=\"name\">Name</option>\r\n                    <option value=\"id\">ID</option>\r\n                </Select>\r\n                <Input id=\"keyword\" type=\"text\" style={{ width: '70%' }} />\r\n                <Button type=\"submit\" ml={2} mb={1}>Search</Button>\r\n            </form>\r\n            <Avatar mr={2} ml={'auto'} />\r\n        </div>\r\n    )\r\n}","import './home.css'\r\n\r\nimport { Box, Image, Badge, Button } from '@chakra-ui/react';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport axios from 'axios';\r\n\r\nimport { search_by_id } from '../../actions/searchAction';\r\nimport { getNodeMajorVersion } from 'typescript';\r\n\r\nexport default function Home() {\r\n\r\n    const [movies, setMovies] = useState<any>([]);\r\n    const [page, setPage] = useState(1);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const showMovieDetails = (id: any) => {\r\n        const data = { id };\r\n        axios.post('c5/getMovies', data)\r\n            .then((response: any) => {\r\n                if (response.status === 200) {\r\n                    console.log('resposne',response.data.movieList);\r\n                    dispatch(search_by_id([response.data.movieList]));\r\n                    history.push('/movies/' + id);\r\n                }\r\n            })\r\n    }\r\n\r\n    const fetchMovies = () => {\r\n        const data = { page };\r\n\r\n        axios.post('/c5/listMovies', data)\r\n            .then((response: any) => {\r\n                if (response.status = 200) {\r\n                    setMovies(response.data.movieList);\r\n                }\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchMovies();\r\n    }, [page])\r\n\r\n    return (\r\n        <div className=\"home-main-div\">\r\n            <div className=\"movie-list-div\">\r\n                {movies ? movies.map((movie: any, index: any) => {\r\n                    return (\r\n\r\n                        <Box m={2} key={index} maxW=\"200\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" onClick={() => showMovieDetails(movie.imdbID)}>\r\n                            <Image src={movie.Poster} alt=\"poster not available\" />\r\n\r\n                            <Box p=\"6\">\r\n                                <Box d=\"flex\" alignItems=\"baseline\">\r\n                                    <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\r\n                                        New\r\n                                    </Badge>\r\n                                    <Box\r\n                                        color=\"gray.500\"\r\n                                        fontWeight=\"semibold\"\r\n                                        letterSpacing=\"wide\"\r\n                                        fontSize=\"xs\"\r\n                                        textTransform=\"uppercase\"\r\n                                        ml=\"2\"\r\n                                    >\r\n                                        {movie.Runtime} &bull; {movie.Year}\r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                <Box\r\n                                    mt=\"1\"\r\n                                    fontWeight=\"semibold\"\r\n                                    as=\"h4\"\r\n                                    lineHeight=\"tight\"\r\n                                    isTruncated\r\n                                >\r\n                                    {movie.Title}\r\n                                </Box>\r\n\r\n                                <Box>\r\n                                    {movie.BoxOffice}\r\n                                    <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\r\n                                        / wk\r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                    )\r\n                }) : <p>No MOvies Found</p>\r\n                }\r\n            </div>\r\n            <div className=\"pagination-div\">\r\n                <Button isDisabled={page === 1 ? true : false} onClick={() => setPage(page - 1)}>Previous</Button>\r\n                <Button onClick={() => setPage(page + 1)}>Next</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Box, Image, Badge, Text, Heading } from '@chakra-ui/react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport axios from 'axios';\r\n\r\nimport { search_by_id } from '../../actions/searchAction';\r\n\r\nimport './search.css';\r\n\r\nexport default function Search() {\r\n\r\n\r\n    const movies = useSelector((state: any) => state.search);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const showMovieDetails = (id:any) => {\r\n        const data = { id };\r\n        axios.post('/c5/getMovies', data)\r\n            .then((response: any) => {\r\n                if (response.status === 200) {\r\n                    console.log('movie', response.data.movieList);\r\n                    dispatch(search_by_id([response.data.movieList]));\r\n                    history.push('/movies/' + id);\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"search-main-div\">\r\n            <Heading size=\"md\" mb={3}>{movies.length} Result Found </Heading>\r\n            <div className=\"search-result-div\">\r\n                {movies ? movies.map((movie: any, index: any) => {\r\n                    return (\r\n\r\n                        <Box m={2} key={index} maxW=\"200\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" onClick={() => showMovieDetails(movie.imdbID)}>\r\n                            {console.log(movie.Poster)}\r\n                            <Image size=\"sm\" src={movie.Poster} alt=\"poster not available\" />\r\n\r\n                            <Box p=\"6\">\r\n                                <Box d=\"flex\" alignItems=\"baseline\">\r\n                                    <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\r\n                                        New\r\n                                    </Badge>\r\n                                    <Box\r\n                                        color=\"gray.500\"\r\n                                        fontWeight=\"semibold\"\r\n                                        letterSpacing=\"wide\"\r\n                                        fontSize=\"xs\"\r\n                                        textTransform=\"uppercase\"\r\n                                        ml=\"2\"\r\n                                    >\r\n                                        {movie.Runtime} &bull; {movie.Year}\r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                <Box\r\n                                    mt=\"1\"\r\n                                    fontWeight=\"semibold\"\r\n                                    as=\"h4\"\r\n                                    lineHeight=\"tight\"\r\n                                    isTruncated\r\n                                >\r\n                                    {movie.Title}\r\n                                </Box>\r\n\r\n                                <Box>\r\n                                    {movie.BoxOffice}\r\n                                    <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\r\n                                        / wk\r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                    )\r\n                }) : <p>No MOvies Found</p>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import './movie.css';\r\n\r\nimport { Image, Heading, Text } from '@chakra-ui/react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function Movie() {\r\n\r\n    const movies = useSelector((state: any) => state.search);\r\n    console.log('movies', movies);\r\n    const movie = movies[0];\r\n    console.log(movies);\r\n\r\n    return (\r\n        <div className=\"movie-main-div\">\r\n            <div className=\"movie-info\">\r\n                <Image className=\"movie-poster\" src={movie.Poster} />\r\n            </div>\r\n\r\n            <div className=\"movie-extras\">\r\n                <div className=\"movie-title\">\r\n                    <Heading size=\"2xl\">{movie.Title}</Heading>\r\n                </div>\r\n                <div className=\"movie-details\">\r\n                    <Heading mt={5} size=\"md\">Year:</Heading>\r\n                    <Text ml={10} size=\"2xl\">{movie.Year}</Text>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useEffect} from 'react';\nimport { Route, Switch } from 'react-router'\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\n\nimport Header from './components/header/header';\nimport Home from './components/home/home';\nimport Search from './components/search/search';\nimport Movie from './components/movieDetails/movie';\n// import LoginSignup from './components/loginSignup/loginSignup';\n\nimport { login_action } from './actions/login_action';\n\nconst routes = () => {\n\n  return (\n    <div className=\"app-main-div\">\n      <Header />\n      <Switch>\n        <Route path='/' exact component={Home} />\n        <Route path='/search' component={Search} />\n        <Route path=\"/movies\" component={Movie} />\n      </Switch>\n    </div>\n  )\n}\n\nfunction App() {\n\n  const login = useSelector((state: any) => state.login)\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n     axios.post('/c5/getUserData', { withCredentials: true})\n     .then((response:any) => {\n       if(response.status === 200) {\n         dispatch(login_action());\n       }\n     })\n  })\n\n  return (\n    <>\n      {/* {login ? routes() : <LoginSignup /> } */}\n      {routes()}\n    </>\n  );\n}\n\nexport default App;\n","export const login_action = () => {\r\n    return { type: 'LOGIN', payload: true}\r\n}\r\n\r\nexport const logout_action = () => {\r\n    return { type: 'LOGOUT', payload: false}\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\nimport './index.css';\nimport store from './store/store';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <ChakraProvider>\n          <App />\n        </ChakraProvider>\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}